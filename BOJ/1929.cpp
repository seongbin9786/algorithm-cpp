#include <stdio.h>

/*
	[Silver 2] 
	소수 구하기
	1. 2초 제한이긴 한데 N < 1,000,000이어서 모든 소수를 구하는 데 
	  가장 빠른 알고리즘인 "에라스토테네스의 체"를 구현하기로 한다.
	2. 나누기 또한 2 ~ sqrt(N) 까지만 나누기로 한다. (증명 참조)
	---
	[오답]
	1. 체 구현을 잘 못 했음
	2. OutOfBounds 등 오류 발생 (이해 못 함...)
    3. 제대로 체 구현해서 제출함. 체도 체인데 체보다 최적화 부분에서 제곱근 이하까지만 돌리는 것 말곤 다른 글 내용은 잘 이해 못한듯
*/
int main()
{
    int i, j, N, M;
    bool arr[1000001] = {false}; // <= 1,000,000
    arr[1] = true;               // 1은 소수 아님
    scanf("%d %d", &M, &N);
    for (i = 2; i * i <= N; i++)       // sqrt(N) 까지의 수로 나눔
        for (j = i + 1; j <= N; j++)   // 나눌 때마다 i+1~j 까지 순회
            if (!arr[j] && j % i == 0) // 아직 걸러지지 않았고 j가 소수인 경우
                arr[j] = true;
    for (i = M; i <= N; i++)
        if (!arr[i])
            printf("%d\n", i);
    return 0;
}